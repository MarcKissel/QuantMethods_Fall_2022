---
title: "Quant Methods-day 3"
author: "Marc Kissel"
format:
  revealjs:
    slide-number: true
    preview-links: true
    slide-tone: false
    chalkboard: true
    theme: serif 
editor: visual
author: Marc Kissel
institute: Appstate
echo: true
---
testing


# today

-   reading

-   homework

-   video

## readings

### Norman - The Design of Everyday Things

-   what was the point of this piece?
-   can you see it relevant to other courses?
-   what if anything did you like about it?

## homework questions/do together

-   Go over R intro together

## video

[The era of blind faith in big data must end](https://www.youtube.com/watch?v=_2u_eHHzRto&t=1s)

# Data science

[definition by Hilary Mason and Chris H. Wiggins](https://sites.google.com/a/isim.net.in/datascience_isim/taxonomy)

Five steps: (1) obtaining data, (2) scrubbing data, (3) exploring data, (4) modeling data, and (5) interpreting data. Together, these steps form the OSEMN model (which is pronounced as awesome).

## visualized version

![](https://datascienceatthecommandline.com/2e/images/dscl_0101.png)

## getting data

Often times this is a difficult step. Can automate it with code

-   download it, get it from a database, extract it (scrape the data from a website), create it

-   sometimes need to mess with APIs - **Application Programming Interface**, software that allows two applications to talk to each other.

## getting data, 2

data comes in different types

CSV,

JSON,

HTML,

XML form

XLS

MORE

## scrubbing data

this is about getting data from the 'wild' into a clean version

-   missing data, weird things, stuff you don't need

filter, extract words, convert to different type

""80% of the work in any data project is in cleaning the data."

## scrubbing data, continued

named entities: People who live in New York City might answer: "New York, NY", "NYC", "New York City", "Manhattan, NY", "The City"

Week 4 will be about avoding some of these issues in the first place

# exploring

Get to know your data!

-   look at it

    -   Single-feature histograms
    -   scatter plots
    -   Dimensionality reduction
    -   Clustering

example of Dimensionality reduction:

Netflix

-   do some stats on it

-   make viz

## modeling

explain your data or predict what will happen

""all models are wrong, but some are useful"

## interpert data

here, we draw conclusions & communicate results

the predictive power of a model lies in its ability to generalize in the quantitative sense: to make accurate quantitative predictions of data in new experiments.

# A bit more about programming

::: callout-tip
if you want to know more:

https://datascienceatthecommandline.com
:::

## working at the command line

### you won't have to do this often, but useful to know this stuff for data science

-   sometimes good for installing/downloading things/decompress files/compiling code

-   A shell is text application for working with files. takes commands and passes them on to the operating system

    -   everything you do in your computer can be done in theory it the shell but it is much harder

## The path

-   what is a path?

the complete location or name of where a file (or something..) is located.

PC:

[![path for DOS](https://www.computerhope.com/jargon/p/path.gif){fig-alt="shows the ms dos path with the root directory, parent, current directoy, file, and file extension"}](https://www.computerhope.com/jargon/p/path.htm)

For Apple/Linux

> /home/hope/public_html/

internet path:

    https://www.computerhope.com/jargon/p/path.htm

::: callout-important

You may only have a partial path. For example, the prompt may have "\~/public_html/cgi-bin" in the prompt. The \~ ([tilde](https://www.computerhope.com/jargon/t/tilde.htm)) is a shortcut used to express your [home directory](https://www.computerhope.com/jargon/h/homedir.htm).
:::

## more on path

to get the working directory

PC: **chdir** at the prompt.

Linux: **pwd** at the prompt

## setting the path

-   specifies the location where MS-DOS should look when it executes a command

If you get an error about the path, i think best thing to do is google the error and see what to do to fix it!

## 

## directories

parent child stuff

-   stuff about . and \... in directories

    -   .. = move up a direcotry (i.e parent)

    -   . =current direcotry?

    -   dif between static and relative path

        -   realative= fro cirrent move to direcotythat is next to it..in smae folder

        -   abosul path = from root of file system..specfy all the path

-   what is a home directory

## stuff about environment

-   https://www.youtube.com/watch?v=ADh_OFBfdEE

-   NAME and Value

    -   value is a string?

    -   tells a program how the machine is setup and control behavior of programs

    -   one useful variable is the path variable.

        -   tells computer where to look for program

## other things


-   MABE

-   bash??

    -   aybe good

-   

-   show the R folders on my computer and ralk about what they are

# Github
=======
---
title: "Quant Methods-day 3"
author: "Marc Kissel"
format:
  revealjs:
    slide-number: true
    preview-links: true
    slide-tone: false
    chalkboard: true
    theme: serif 
editor: visual
author: Marc Kissel
institute: Appstate
echo: true
---

# today

-   reading

-   homework

-   video

## readings

### Norman - The Design of Everyday Things

-   what was the point of this piece?
-   can you see it relevant to other courses?
-   what if anything did you like about it?

## homework questions/do together

-   Go over R intro together

## video

[The era of blind faith in big data must end](https://www.youtube.com/watch?v=_2u_eHHzRto&t=1s)

# Data science

[definition by Hilary Mason and Chris H. Wiggins](https://sites.google.com/a/isim.net.in/datascience_isim/taxonomy)

Five steps: (1) obtaining data, (2) scrubbing data, (3) exploring data, (4) modeling data, and (5) interpreting data. Together, these steps form the OSEMN model (which is pronounced as awesome).

## visualized version

![](https://datascienceatthecommandline.com/2e/images/dscl_0101.png)

## getting data

Often times this is a difficult step.

-   Download it, get it from a database, extract it (scrape the data from a website), create it

-   Can automate it with code

-   sometimes need to mess with APIs - **Application Programming Interface**, software that allows two applications to talk to each other.

## getting data, 2

data comes in different types

-   CSV

-   JSON

-   HTML

-   XML

-   XLS

## scrubbing data

this is about getting data from the 'wild' into a clean version

-   missing data, weird things, stuff you don't need

-   we might want to *filter*, *extract words*, *convert*

::: callout-note
"80% of the work in any data project is in cleaning the data."
:::

## scrubbing data, continued

-   named entities: People who live in New York City might say they live in: "New York, NY", "NYC", "New York City", "Manhattan, NY", "The City"

-   Week 4 will be about avoiding some of these issues in the first place

# exploring

Get to know your data!

-   Visualize your data (week 5-6)

    -   Single-feature histograms
    -   scatter plots
    -   Dimensionality reduction
    -   Clustering

-   do some stats on it

## Modeling

explain your data or predict what will happen

::: callout-warning
"all models are wrong, but some are useful"
:::

## interpret data

-   here, we draw conclusions & communicate results

-   "The predictive power of a model lies in its ability to generalize in the quantitative sense: to make accurate quantitative predictions of data in new experiments."

    -   But this is not always easy...

# A bit more about programming

::: callout-tip
if you want to know more:

https://datascienceatthecommandline.com
:::

## working at the command line

-   sometimes good for installing/downloading things/decompress files/compiling code

-   A shell is text application for working with files. takes commands and passes them on to the operating system

    -   everything you do in your computer can be done in theory it the shell but it is much harder

::: callout-warning
### you won't have to do this often, but useful to know this stuff for data science
:::

## The path

-   what is a path?

the complete location or name of where a file (or something..) is located.

## PC:

[![path for DOS](https://www.computerhope.com/jargon/p/path.gif){fig-alt="shows the ms dos path with the root directory, parent, current directoy, file, and file extension"}](https://www.computerhope.com/jargon/p/path.htm)

## For Apple/Linux

> /home/hope/public_html/

## internet path:

    https://www.computerhope.com/jargon/p/path.htm

MORE?


## more on path

You may only have a partial path. For example, the prompt may have "~/public_html/cgi-bin" in the prompt. The ~ (tilde) is a shortcut used to express your home directory.

to get the working directory

PC: **chdir** at the prompt.

Linux: **pwd** at the prompt

R: getwd()

## setting the path

-   specifies the location where computer should look when it executes a command

If you get an error about the path, i think best thing to do is google the error and see what to do to fix it!

## 

## directories

parent child stuff

-   stuff about . and \... in directories

    -   .. = move up a direcotry (i.e parent)

    -   . =current direcotry?

    -   dif between static and relative path

        -   realative= fro cirrent move to direcotythat is next to it..in smae folder

        -   abosul path = from root of file system..specfy all the path

-   what is a home directory

## stuff about environment

-   https://www.youtube.com/watch?v=ADh_OFBfdEE

-   NAME and Value

    -   value is a string

    -   tells a program how the machine is setup and control behavior of programs

    -   one useful variable is the path variable.

        -   tells computer where to look for program

## other things

-   MABE

-   bash??

    -   aybe good

-   

-   show the R folders on my computer and ralk about what they are

# Github
>>>>>>> 7a9f2affa4c36bb22efd60de99c72209afe844af
